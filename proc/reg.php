<?php
  session_start();
  if($_POST) {
    require_once("../functions.php");
    $link = db_connect();
    $errors = array();
    if(isset($_POST['name'])){
      if (mb_strlen($_POST['name']) == 0) {
        $errors[] = put_error(1, "–ë–µ–∑ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏ –Ω–∏–∫–∞–∫...");
      }else if (mb_strlen($_POST['name']) > 100) {
        $errors[] = put_error(1, "–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 100 —Å–∏–º–≤–æ–ª–æ–≤");
      }
    }else {
      $errors[] = put_error(1, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ');
    }
    if(isset($_POST['email'])){
      if (mb_strlen($_POST['email']) == 0) {
        $errors[] = put_error(2, "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å");
      }else if (mb_strlen($_POST['email']) > 50) {
        $errors[] = put_error(2, "–î–ª–∏–Ω–∞ –ø–æ—á—Ç–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 50 —Å–∏–º–≤–æ–ª–æ–≤");
      }else if (mb_strlen($_POST['email']) != mb_strlen(str_replace(" ", "", $_POST['email']))) {
        $errors[] = put_error(3, "–¢–µ–±–µ –Ω–µ –∫–∞–∂–µ—Ç—Å—è —á—Ç–æ –ø—Ä–æ–±–µ–ª—ã —Ç—É—Ç –ª–∏—à–Ω–∏–µ? –Ø –∏—Ö —É–±–µ—Ä—É —Å–∞–º");
      }else if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {
        $errors[] = put_error(2, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å ü§∑‚Äç‚ôÇÔ∏è");
      }else if(get_count($link, "Students", "email", htmlspecialchars($_POST['email'])) > 1){
        $errors[] = put_error(2,"–≠—Ç–æ—Ç –ø–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å —É–∂–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω –¥—Ä—É–≥–∏–º —Å—Ç—É–¥–µ–Ω—Ç–æ–º");
      }
    }else {
      $errors[] = put_error(2, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ');
    }
    if (isset($_POST['login'])) {
			if (mb_strlen(trim($_POST['login'])) == 0) {
        $errors[] = put_error(4, "–õ–æ–≥–∏–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
			}else if(mb_strlen($_POST['login']) < 6 || mb_strlen($_POST['login']) > 25){
        $errors[] = put_error(4, "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –Ω–µ –±–æ–ª–µ–µ 25");
			}else if(!preg_match ("#^[aA-zZ0-9\-_]+$#",$_POST['login'])){
        $errors[] = put_error(4, "–í –ª–æ–≥–∏–Ω–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã");
			}else if(get_count($link, "Students", "login", htmlspecialchars($_POST['login'])) > 0){
        $errors[] = put_error(4, "–≠—Ç–æ—Ç –ª–æ–≥–∏–Ω —É–∂–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω –¥—Ä—É–≥–∏–º —Å—Ç—É–¥–µ–Ω—Ç–æ–º");
      }
		}else {
      $errors[] = put_error(4, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ');
    }
    if(isset($_POST['phone'])){
      if (mb_strlen(trim($_POST['phone'])) == 0) {
        $errors[] = put_error(5, "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞");
      }else if (mb_strlen($_POST['phone']) != 16) {
        $errors[] = put_error(5, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ü§∑‚Äç‚ôÇÔ∏è");
      }
    } else {
      $errors[] = put_error(5, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ');
    }
    if (isset($_POST['fpass'])){
      if (mb_strlen(trim($_POST['fpass'])) == 0){
  			$errors[] = put_error(6, '–ù–µ–ª—å–∑—è –∑–∞–±—ã–≤–∞—Ç—å –ø—Ä–æ –ø–∞—Ä–æ–ª—å');
  		}elseif(mb_strlen($_POST['fpass']) != mb_strlen(str_replace(" ", "", $_POST['fpass']))){
        $errors[] = put_error(7, '–°–µ—Ä—å—ë–∑–Ω–æ? –ü—Ä–æ–±–µ–ª—ã –≤ –ø–∞—Ä–æ–ª–µ? –ê–π-—è–π! üòÅ');
      }elseif (strpos($_POST['fpass']," ") !== false) {
        $errors[] = put_error(7, '–î—É–º–∞–µ—à—å —Å–º–æ–∂–µ—à—å –º–µ–Ω—è –æ–±–º–∞–Ω—É—Ç—å –ø–æ—Å—Ç–∞–≤–∏–≤ –ø—Ä–æ–±–µ–ª—ã –º–µ–∂–¥—É –±—É–∫–≤?) üòÇ');
      }elseif (mb_strlen($_POST['fpass']) < 6 || mb_strlen($_POST['fpass']) > 20) {
        $errors[] = put_error(6, '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –Ω–µ –±–æ–ª–µ–µ 20');
      }
    } else {
      $errors[] = put_error(6, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ');
    }
    if (isset($_POST['spass'])){
      if (mb_strlen(trim($_POST['spass'])) == 0){
  			$errors[] = put_error(8, '–ù–µ–ª—å–∑—è –∑–∞–±—ã–≤–∞—Ç—å –ø—Ä–æ –ø–∞—Ä–æ–ª—å');
  		}elseif(trim($_POST['fpass']) != trim($_POST['spass'])){
        $errors[] = put_error(8, '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      }
    } else {
      $errors[] = put_error(8, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ');
    }
    if (isset($_POST['gender'])){
      if ($_POST['gender'] < -1 || $_POST['gender'] > 1) {
        $errors[] = put_error(9, '–î–∞–≤–∞–π-–∫–∞ –Ω–µ –±—É–¥–µ—à—å –±–∞–ª–æ–≤–∞—Ç—å—Å—è —Å —ç—Ç–∏–º?');
      }
    } else {
      $errors[] = put_error(9, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ');
    }
    if (isset($_POST['birth'])) {
      if (strtotime($_POST['birth']) > strtotime("now") || strlen(substr($_POST['birth'], 0, strpos($_POST['birth'], '-'))) > 4) {
        $errors[] = put_error(10, '–¢—ã —á—Ç–æ –∏–∑ –±—É–¥—É—â–µ–≥–æ?');
      }elseif (strtotime($_POST['birth']) < strtotime("1970-01-01")) {
        $errors[] = $errors[] = put_error(10, '–ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 1970');
      }elseif (empty($_POST['birth'])) {
        $errors[] = $errors[] = put_error(10, '–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å –¥–∞—Ç–æ–π');
      }
    }
    if (isset($_POST['check'])){
      if ($_POST['check'] != 'true') {
        $errors[] = put_error(11, '–ù—É–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏ –ø—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è');
      }
    } else {
      $errors[] = put_error(11, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ');
    }
    if (isset($_POST['recaptcha'])){
			$captcha_response = $_POST['recaptcha'];
			$url = 'https://www.google.com/recaptcha/api/siteverify';
			$params = [
				'secret' => '6LdH-ncUAAAAAGp4kKWaG1wsS3igcYU1KZeVz4C4',
				'response' => $captcha_response,
				'remoteip' => $_SERVER['REMOTE_ADDR']
			];
			$ch = curl_init($url);
			curl_setopt($ch, CURLOPT_POST, 1);
			curl_setopt($ch, CURLOPT_POSTFIELDS, $params);
			curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
			curl_setopt($ch, CURLOPT_HEADER, 0);
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
			$response = curl_exec($ch);
			if(!empty($response)) $decoded_response = json_decode($response);
			$success = false;
			if ($decoded_response && $decoded_response->success)
			{
				$success = $decoded_response->success;
			}
			if(!$success){
				$errors[] = put_error(12, '–ù–µ–≤–µ—Ä–Ω–∞—è –∫–∞–ø—Ç—á–∞');
			}
		}else {
			$errors[] = put_error(12, '–ö–∞–ø—Ç—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
		}
    if (isset($_POST['token'])){
      if (get_count($link, "Students", "token", htmlspecialchars($_POST['token'])) == 0) {
        $errors[] = put_error(13, '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω');
      }
    } else {
      $errors[] = put_error(13, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ');
    }
    if(count($errors) > 0){
      header("HTTP/1.0 400 Bad Request",false,400);
      die(json_encode(array(
        'errors'=> $errors
      )));
    }
    if(!send_in_base($link,"UPDATE `Students` SET
      `name`='".htmlspecialchars($_POST['name'])."', `email`='".htmlspecialchars($_POST['email'])."', `login`='".htmlspecialchars($_POST['login'])."'
      , `phone`='".htmlspecialchars($_POST['phone'])."', `password`='".htmlspecialchars($_POST['fpass'])."', `gender`=".htmlspecialchars(($_POST['gender'] == -1)?'NULL':$_POST['gender'])."
      , `token`=NULL, `date-of-birth`=".((isset($_POST['birth']))?"'".htmlspecialchars($_POST['birth'])."'":'NULL').", `state`='active', `last-session`=CURRENT_TIMESTAMP
        WHERE `token`='".htmlspecialchars($_POST['token'])."'")){
      header("HTTP/1.0 500 Internal Server Error",false,500);die(mysqli_error( $link ));
    }else {
      exit(json_encode(array('response'=>'ok')));
    }
  }else {
    header("HTTP/1.0 400 Bad Request",false,400);die();
  }
?>
